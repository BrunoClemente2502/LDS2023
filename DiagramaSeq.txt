title C#1 - Diagrama de sequência de acordo com a variante Curry & Grace

actor Utilizador
participant Controller
participant View
participant Model

<<<<<<< HEAD
activate Utilizador
activate Controller
Utilizador->Controller: IniciarPrograma()
activate View
deactivate Utilizador
Controller->View: ApresentarInstrucoes()
deactivate Controller
activate Model
=======

activate Utilizador 
Utilizador->Controller:IniciarPrograma()
activate Controller 
activate View 
Controller->View: ApresentarInstrucoes(comandos)
deactivate Controller
activate Model 
>>>>>>> krasner_pope_update
View->Model:ListarComandos()
View<--Model:Retorna lista de comandos registados e descrições
deactivate Model
activate Utilizador
View -->Utilizador: Imprime mensagem com instruções
deactivate View
deactivate Utilizador
space
<<<<<<< HEAD
activate Controller
activate View
=======
activate Controller 
activate View 
>>>>>>> krasner_pope_update
Controller->View: ImprimirPromptInserirInput()
deactivate Controller
activate Utilizador 
Utilizador <-- View: Imprime prompt a indicar para inserir comando
space
<<<<<<< HEAD
Utilizador-->View: Insere comando e path para imagem
=======
deactivate View
activate Controller 
Utilizador-->Controller: Insere comando e path para imagem
>>>>>>> krasner_pope_update
deactivate Utilizador
space
activate Controller
View --> Controller: Retorna comando inserido
deactivate View
deactivate Controller

group CASO 1: while(Comando inválido)
space
activate Controller 
activate Model 
Controller->Model: ExecutarComando(comando)
Controller<--Model: throw CommandNotValid
deactivate Model
Controller->Controller: HandleException(CommandNotValid)
activate View 
Controller->View: ImprimirPromptInserirInput()
deactivate Controller
activate Utilizador 
Utilizador <-- View: Imprime prompt a indicar para inserir comando
space
<<<<<<< HEAD
Utilizador-->View: Insere comando e path para imagem
=======
deactivate View
activate Controller 
Utilizador-->Controller: Insere comando e path para imagem
>>>>>>> krasner_pope_update
deactivate Utilizador
space
activate Controller
View --> Controller: Retorna comando inserido
deactivate View
deactivate Controller
end

group CASO2: while(Path para imagem inválido)
space
activate Controller 
activate Model 
Controller->Model: ExecutarComando(comando)
Controller<--Model: throw InvalidPath
deactivate Model
Controller->Controller: HandleException(InvalidPath)
space
activate View 
Controller->View: ImprimirPromptInserirInput()
deactivate Controller
activate Utilizador 
Utilizador <-- View: Imprime prompt a indicar para inserir comando
space
<<<<<<< HEAD
Utilizador-->View: Insere comando e path para imagem
=======
deactivate View
activate Controller 
Utilizador-->Controller: Insere comando e path para imagem
>>>>>>> krasner_pope_update
deactivate Utilizador
space
activate Controller
View --> Controller: Retorna comando inserido
deactivate View
deactivate Controller
end 


group CASO 3: Comando e path de imagem válidos
space 
activate Model 
activate Controller 
Controller->Model: ExecutarComando(comando)
Model-->Controller:Retorna estado de execução do comando
deactivate Model
deactivate Controller

<<<<<<< HEAD
alt #E5E4E2 FALHA: Execução da operação com erro
=======
alt FALHA: Execução da operação com erro
>>>>>>> krasner_pope_update
activate Controller 
activate View 
Controller->Controller: HandleException(OperationError)
Controller->View: ImprimirMensagemErro()
deactivate Controller
activate Utilizador 
Utilizador <<--View: Mensagem a indicar erro na execução da operação
deactivate View
note right of Utilizador #FFE6E8:Exit(1)
deactivate Utilizador

<<<<<<< HEAD
else #F5FFFA SUCESSO: Execução da operação bem sucedida
=======
else SUCESSO: Execução da operação bem sucedida
>>>>>>> krasner_pope_update
activate Controller 
activate View 
Controller->View: ApresentarResultados()
deactivate Controller
activate Model 
View->Model: FornecerResultado()
Model-->View:Retorna resultado
deactivate Model
space
activate Utilizador 
Utilizador <<-- View: Mostra estatísticas ou path para a imagem alterada
deactivate View
note right of Utilizador #F5FFFA:Exit(0)
deactivate Utilizador
end
end


group CASO 4: Utilizador solicita término de programa a qualquer instante
space
activate Utilizador 
<<<<<<< HEAD
activate View 
Utilizador-->View: Selecciona sair do programa
deactivate Utilizador
space
activate Controller
View-->Controller: Retorna comando inserido
=======
activate Controller 
Utilizador-->Controller: Selecciona sair do programa
activate View 
>>>>>>> krasner_pope_update
Controller->View: ImprimirMensagemDespedida()
deactivate Controller
activate Utilizador
View-->Utilizador: Imprime mensagem de despedida
deactivate View
note right of Utilizador #F5FFFA:Exit(0)
deactivate Utilizador 
end



space
destroy Utilizador
destroy Controller
destroy View
destroy Model
